@model PagedList.IPagedList<ITWorkLogs.Models.Sync>
@using PagedList.Mvc;

@{
    ViewBag.Title = "List of My Tasks";
}

@if(ViewBag.notification == true)
{

}

<div id="tasklist">
    <div class="table-responsive">
        <table class="table table-striped table-sm">
            <tr>
                <th>Branches</th>
                <th>Reason</th>
                <th>Downloading</th>
                <th>Uploading</th>
                <th>Time Started</th>
                <th>Time Ended</th>
                <th><center>Action</center></th>
                
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Branches)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Reason)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Downloading)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Uploading)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateCreated)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TimeEnded)
                    </td>

                    <td> 
                        @if (item.Others == false && item.Status != "DONE")
                        {

                            @Ajax.ActionLink(" ", "GETProblemEncountered", "syncs", new { id = item.SynchId }, new AjaxOptions { OnSuccess = "success('" + item.SynchId + "')" }, new { @class = "glyphicon glyphicon-plus", @role = "button" })@: |
                            @Html.Raw("<a data-modal='' href='/syncs/edit/" + item.SynchId + "' id='" + item.SynchId + "' title='Edit'> <span class='glyphicon glyphicon-edit'> </span> </a>")@: |
                            @Html.Raw("<a data-modal='' href='/syncs/Details/" + item.SynchId + "' id='" + item.SynchId + "' title='Detail'> <span class='glyphicon glyphicon-eye-open'> </span> </a>") @: |
                            @Ajax.ActionLink(" ", "timeended", "syncs", new { id = item.SynchId, }, new AjaxOptions { OnSuccess = "ended('" + item.SynchId + "')" }, new { @class = "glyphicon glyphicon-stop", @role = "button" })
                        }
                        else
                        {
                            <center>@Html.Raw("<a data-modal='' href='/syncs/Details/" + item.SynchId + "' id='" + item.SynchId + "' title='Detail'> <span class='glyphicon glyphicon-eye-open'> </span> </a>")</center>
                        }
                    </td>
                </tr>
            }
        </table>
    </div>
    <div class="pull-right"><p class="text-primary"><strong>@Model.TotalItemCount</strong> record(s)</p></div>
    <br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(
    Model,
    page => Url.Action("partialsynclogs", "syncs", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, statusTask = ViewBag.statusTask }),
    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "tasklist" }))

</div>

<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
        <div class="modal-dialog">
            <div class="modal-content">
                <div id='myModalContent'></div>
            </div>
        </div>
    </div>

<script type="text/javascript">
    $(function () {
        $.ajaxSetup({ cache: false });
        $("a[data-modal]").on("click", function (e) {
            $('#myModalContent').load(this.href, function () {
                $('#myModal').modal({
                    keyboard: true
                }, 'show');
                bindForm(this);
            });
            return false;
        });
    });

    function bindForm(dialog) {
        $('form', dialog).submit(function () {
            $.ajax({
                url: this.action,
                type: this.method,
                data: $(this).serialize(),
                success: function (result) {
                    if (result.success) {
                        $('#myModal').modal('hide');
                        $(".modal-backdrop.in").hide();
                        swal("Done!", " Your task is edited", "success");
                        updatePartial();
                    }
                }
            });

            return false;
        });
    }

    function success(id) {
        swal({
            title: "Problem and Solution:",
            text: "<textarea id='problem' , style = 'text-transform:uppercase', rows='5' cols='60', placeholder = 'Problem encountered'></textarea>,<textarea id='solution' , style = 'text-transform:uppercase', rows='5' cols='60',, placeholder = 'Solution'></textarea>",
            // ----------------- define html element with id
            html: true,
            showCloseButton: true,
            closeOnConfirm: true,
        }, function () {
            // get value using textarea id
            var problem = document.getElementById('problem').value;
            var solution = document.getElementById('solution').value;
            if (id != 0)
            {
                var objdata = { "problem": problem, "solution": solution, "syncid": id };
                $.ajax({
                    url: '/syncs/POSTProblemEncountered',
                    type: 'POST',
                    data: objdata,
                    success: function (data) {
                        saveSync();//refresh partialview...  
                    },

                    error: function () { swal("error"); }
                });
                return false;
            }
            else {
                swal.showInputError("You need to write something!");
            }
        });
    }

    function started(id) {
        var objdata = { "id": id };
        $.ajax({
            url: '/syncs/timestarted',
            type: 'POST',
            data: objdata,
            success: function (data) {
                updatePartial();
                swal("", "This task  has been Started.", "success");
            },
            error: function () { swal("error"); }
        });
    }

    function ended(id) {
        var objdata = { "id": id };
        $.ajax({
            url: '/syncs/timeended',
            type: 'POST',
            data: objdata,
            success: function (data) {
                updatePartial();
                swal("", "This task is ended", "success");
            },
            error: function () { swal("error"); }
        });
    }


    //Updating partialview
    function updatePartial() {
        $.ajax({
            url: '/syncs/partialsynclogs',
            type: "GET",
            dataType: "html",
            data: {
                searchString: $('#searchString').val(),
                statusTask: $('#statusTask').val(),
            },
            cache: false,
            success: function (data) {

                $("#tasklist").html(data)
            },
            error: function (xhr, status, error) {
                alert(xhr.responseText);
            }
        })
    }

    function saveSync()
    {
        updatePartial();
        swal("Good job!", "Your problem and solution is added.", "success");
    }
</script>



